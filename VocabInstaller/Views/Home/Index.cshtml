@using System.Linq
@model VocabInstaller.ViewModels.HomeViewModel

@{
    ViewBag.Title = "Home Page";
}

@section navigations {
    <nav>
        <ul id="menu">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("Review", "Index", "Review")</li>
            <li>@Html.ActionLink("About", "About", "Home")</li>
            @if (User.IsInRole("Administrator")) {
                <li>@Html.ActionLink("Function", "Index", "Function")</li>
            }
        </ul>
    </nav>
}

<div class="search">
    @using (Html.BeginForm("Index", "Home", FormMethod.Get)) {
        @Html.TextBox("search")
        <input type="submit" value="Search" />
    }
</div>

<div class="float-left">
    <div class="record_num">
        <h3>@Model.ItemNum items</h3>
    </div>

    <div class="create_link">
        @Html.ActionLink("Create", "Create")
    </div>
</div>

<div class="paging">
    <p>
        [ @(Model.Page + 1) / @(Model.LastPage + 1) ]
    </p>
    @Html.Partial("_PagingPartial")
</div>

@if (Model.ViewCards != null && Model.ViewCards.Any()) {
    foreach (var c in Model.ViewCards) {
        <section class="card">
            <div class="left_side">
                <div class="question">
                    @c.Question
                </div>
                <div class="answer">
                    @c.Answer
                </div>
                <div class="note">                    
                    @{
                        var note = c.Note ?? string.Empty;
                        note = Html.Encode(note)
                            .Replace(" ", "&nbsp;").Replace("\n", "<br />");
                    }
                    @Html.Raw(note)
                </div>
            </div>

            <div class="right_side">
                <div class="created_at">
                    @c.CreatedAt.ToString("yyyy/MM/dd HH:mm")
                </div>
                <div class="edit_delete">
                    @Html.ActionLink("Edit", "Edit",
                        new { id = c.Id, page = Model.Page, search = Model.Search })
                     | 
                    @Html.ActionLink("Delete", "Delete",
                        new { id = c.Id, page = Model.Page, search = Model.Search })
                </div>
            </div>
        </section>
    }
} else {
    <p>No item is found.</p>
}

<div class="paging">
    @Html.Partial("_PagingPartial")
    <p>
        [ @(Model.Page + 1) / @(Model.LastPage + 1) ]
    </p>
</div>
