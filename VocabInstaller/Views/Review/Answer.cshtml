@model VocabInstaller.ViewModels.ReviewViewModel

@{
    ViewBag.Title = "Answer";
    var c = Model.ViewCard;
}

@section navigations {
    <ul class="nav navbar-nav">
        <li><a href="@Url.Action("Index", "Home")">Home</a></li>
        <li class="divider_vertical"></li>
        <li><a href="@Url.Action("Index", "Review")">Review</a></li>
        <li class="divider_vertical"></li>
        <li><a href="@Url.Action("Status", "Review")">Status</a></li>
    </ul>
}

<h2>Answer</h2>

<!-- Pagination -->
<div class="row">
    <div class="dummy_pagination">&nbsp;</div>
</div>

<!-- Card -->
<div id="review" class="row">
    <section class="card">
        <div class="card_left">
            @switch (Model.ReviewMode) {
                case "Fast":
                    <div class="question">
                        <div class="display_label">Question</div>
                        <div class="display_field">@c.Question</div>
                    </div>
            
                    <div class="answer">
                        <div class="display_label">Answer</div>
                        <div class="display_field">@c.Answer<span></span></div>
                    </div>        
                    break;
                case "Typing":
                <div class="answer">
                    <div class="display_label">Question</div>
                    <div class="display_field">@c.Answer</div>
                </div>
                <div class="question">
                    <div class="display_label">Answer</div>
                    <div class="display_field">@c.Question</div>
                </div>
                <div class="my_answer">
                    <div class="display_label">My Answer</div>
                    <div class="display_field">
                        @if (Model.IsPerfect) {
                            <span class="perfect">@Model.MyAnswer</span>
                        } else {
                            if (Model.MissIndex != null) {
                                string myAns = Model.MyAnswer;
                                for (int i = 0; i < myAns.Length; i++) {
                                    if (i == Model.MissIndex) {
                                        <span class="error">@myAns[i]</span>
                                    } else {
                                        @myAns[i]
                                    }
                                }
                            }
                        }
                    </div>
                </div>
                    break;
                case "Blank":
                    <div class="answer">
                        <div class="display_label">Question</div>
                        <div class="display_field">@c.Answer</div>
                    </div>
                
                    <div class="my_answer">
                        <div class="display_label">Answer</div>
                        <div class="display_field">
                            @{
                                string cls = Model.IsPerfect ? "perfect" : "error";
                                string blank = Model.Blank;
                                for (int i = 0; i < blank.Length; i++) {
                                    if (blank[i] == '_') {<span class=@cls>@Model.BlankAnswer</span>}
                                    else {@c.Question[i]}
                                }
                            }
                        </div>
                        
                        <div class="my_answer">
                            <div class="display_label">My Answer</div>
                            <div class="display_field">
                                @if (Model.IsPerfect) {
                                    <span class="perfect">@Model.MyAnswer</span>
                                } else {
                                    <span class="error">@Model.MyAnswer</span>
                                }
                            </div>
                        </div>
                    </div>
                    break;
            }
        </div>

        <div class="card_right">
            @using (Html.BeginForm("Answer", "Review",
                routeValues: null, method: FormMethod.Post,
                htmlAttributes: new { @class = "form-horizontal" })) {
                @Html.AntiForgeryToken()

                @Html.Hidden("id", Model.ViewCard.Id)
                @Html.Hidden("page", Model.Page)
                @Html.Hidden("reviewMode", Model.ReviewMode)

                <div class="form-group">
                    @if (Model.ReviewMode == "Fast" || Model.IsPerfect) {
                        <button type="submit" id="sbmPerfect" class="btn btn-success"
                                name="evaluation" value="Perfect">
                            Perfect
                        </button>
                    }
                    @if (Model.ReviewMode == "Fast" || !Model.IsPerfect) {
                        <button type="submit" id="sbmAlmost" class="btn btn-warning"
                                name="evaluation" value="Almost">
                            Almost
                        </button>
                    }
                </div>
            }
        </div> <!-- div class="card_right" -->

        <div class="card_left clear-both">
            @if (!string.IsNullOrEmpty(c.Note)) {
                var note = Html.Encode(c.Note)
                    .Replace("\r", "")
                    .Replace("\n", "<br />")
                    .Replace("&amp;nbsp;", "&nbsp;");
                <div class="note">
                    <div class="display_label">Note</div>
                    <div class="display_field">
                        @Html.Raw(note)
                    </div>
                </div>
            }
        </div>

        <div class="card_right">
            <div class="created_at">
                <div class="display_label">Created at</div>
                <div class="display_field">
                    @c.CreatedAt.ToString("yyyy/MM/dd HH:mm")
                </div>
            </div>

            <div class="reviewed_at">
                <div class="display_label">Reviewed at</div>
                <div class="display_field">
                    @c.ReviewedAt.ToString("yyyy/MM/dd HH:mm")
                </div>
            </div>

            <div class="review_level">
                <div class="display_label">Review Level</div>
                <div class="display_field">
                    <img src="~/Images/rev@(c.ReviewLevel).png" alt="review icon" class="review_icon" />
                    <span class="badge">@(c.ReviewLevel + 1)</span>
                </div>
            </div>

            <div class="answer_time">
                <div class="display_label">Answer Time</div>
                <div class="display_field">
                    @Model.AnswerTime.TotalSeconds.ToString("#.##") [sec]
                </div>
            </div>

            <div class="clear-both">
               @Html.ActionLink("Edit", "Edit", "Home", new {
                   id = c.Id,
                   page = Model.Page, fromController = "Review", fromAction = "Answer",
                   Model.ItemsPerPage, Model.PageSkip, 
                   Model.ReviewMode,
                   Model.MyAnswer, Model.AnswerTime, Model.Blank, Model.BlankAnswer
               },
               new { @id = "btnEdit", @class = "btn btn-primary" })
            </div>
        </div>
    </section>
</div><!-- div class="row" -->

<div class="back_to">
    @Html.ActionLink("Back", "Index",
        new { page = Model.Page, reviewMode = Model.ReviewMode }, null)
</div>

@section scripts{
    <script type="text/javascript">
        $(function () {
            $("#sbmAlmost").focus();
            $("#sbmPerfect").focus();
        });
    </script>
}
