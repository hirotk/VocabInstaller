@model VocabInstaller.ViewModels.ReviewViewModel

@{
    ViewBag.Title = "Review";
}

@section navigations {
    <nav>
        <ul id="menu">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("Review", "Index", "Review")</li>
            <li>@Html.ActionLink("Status", "Status", "Review")</li>
        </ul>
    </nav>
}

<h2>Review</h2>

<!--<div class="record_num">
    <h3>@Model.ItemNum items</h3>
</div>-->

<div class="paging">
    <p>
        [ @(Model.Page + 1) / @(Model.LastPage + 1) ]
    </p>
    @Html.Partial("_PagingPartial")
</div>

@if (Model.ViewQuestions != null && Model.ViewQuestions.Count() > 0) {
    foreach (var q in Model.ViewQuestions) {
        <section class="question">
            <div class="left_side">
                <div class="word">
                    @q.Word
                </div>
                <div class="meaning">
                    ? @*q.Meaning*@
                </div>
            </div>

            <div class="right_side review_page">
                <div id="question_form">
                    @using (Html.BeginForm("Answer", "Review",
                    routeValues: new { id = q.Id }, method: FormMethod.Get, htmlAttributes: null)) {
                        @*Html.AntiForgeryToken()*@

                        @Html.Hidden("page", Model.Page)

                        <p class="submit_button">
                            <input type="submit" value="Answer" />
                        </p>
                    }
                </div>

                <div class="reviewed_at">
                    @q.ReviewedAt.ToString("yyyy/MM/dd HH:mm")
                </div>
                
                <div class="review_level">
                    @q.ReviewLevel
                </div>

                <div class="edit">
                    @*Html.ActionLink("Answer", "Answer",
                        new { id = q.Id, page = Model.Page })
                    | *@
                    @Html.ActionLink("Edit", "Edit", "Home", 
                        new { id = q.Id, page = Model.Page, from = "Review" }, null)
                </div>
            </div>
        </section>
    }
} else {
    <p>No item is found.</p>
}

